
name: 'Create-Ec2'

on:
  workflow_dispatch:
   inputs:
      tf-command:
        type: choice
        description: Select Terraform Command
        required: true
        options: 
        - apply
        - destroy
      environment:
        type: environment

permissions:
  contents: read
  packages: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: $GITHUB_WORKSPACE/ec2
        

    steps:
    - name: User selections
      run: echo "${{ github.event.inputs.environment }}  ${{ github.event.inputs.tf-command }}"
   
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
         

    # action sets up AWS credentials for your workflow using the secrets you defined.
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      if: "${{ github.event.inputs.tf-command == 'init'}}"   
      run: |
        cd $GITHUB_WORKSPACE/ec2
        terraform init
    - name: Terraform Apply
      if: "${{ github.event.inputs.tf-command == 'apply'}}"
      run: |
        cd $GITHUB_WORKSPACE/ec2
        terraform init
        terraform plan 
        terraform apply -auto-approve
        
    - name: Upload ppk file
      if: "${{ github.event.inputs.tf-command == 'apply'}}"   
      uses: actions/upload-artifact@v2
      with: 
        name: generated-ppk
        path: ec2/ec2-key.ppk
   
    - name: Upload pem file
      if: "${{ github.event.inputs.tf-command == 'apply'}}"   
      uses: actions/upload-artifact@v2
      with: 
        name: generated-ppk
        path: ec2/ec2-key.pem
          
    - name: Terraform Destroy
      if: "${{ github.event.inputs.tf-command == 'destroy'}}"
      run: |
        cd $GITHUB_WORKSPACE/ec2
        terraform init
        terraform destroy -auto-approve

